{"version":3,"sources":["webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/node_modules/normalize-scss/sass/normalize/_normalize-mixin.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/node_modules/normalize-scss/sass/normalize/_vertical-rhythm.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/node_modules/normalize-scss/sass/normalize/_variables.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/main.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_base.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_mixins.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_variables.scss","webpack:///./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_common.scss","webpack:///./src/components/content/E:/projects/vadersb/src/components/content/E:/projects/vadersb/src/components/content/content.scss","webpack:///./src/components/content/E:/projects/vadersb/src/components/content/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/content/E:/projects/vadersb/src/components/content/E:/projects/vadersb/src/styles/_mixins.scss","webpack:///./src/components/icon/E:/projects/vadersb/src/components/icon/E:/projects/vadersb/src/components/icon/icon.scss","webpack:///./src/components/info/E:/projects/vadersb/src/components/info/E:/projects/vadersb/src/components/info/info.scss","webpack:///./src/components/info/E:/projects/vadersb/src/components/info/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/link/E:/projects/vadersb/src/components/link/E:/projects/vadersb/src/components/link/link.scss","webpack:///./src/components/link/E:/projects/vadersb/src/components/link/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/person/E:/projects/vadersb/src/components/person/E:/projects/vadersb/src/components/person/person.scss","webpack:///./src/components/person/E:/projects/vadersb/src/components/person/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/person/E:/projects/vadersb/src/components/person/E:/projects/vadersb/src/styles/_mixins.scss","webpack:///./src/components/project/E:/projects/vadersb/src/components/project/E:/projects/vadersb/src/components/project/project.scss","webpack:///./src/components/project/E:/projects/vadersb/src/components/project/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/projects/E:/projects/vadersb/src/components/projects/E:/projects/vadersb/src/components/projects/projects.scss","webpack:///./src/components/projects/E:/projects/vadersb/src/components/projects/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/projects/E:/projects/vadersb/src/components/projects/E:/projects/vadersb/src/styles/_mixins.scss","webpack:///./src/components/side/E:/projects/vadersb/src/components/side/E:/projects/vadersb/src/components/side/side.scss","webpack:///./src/components/side/E:/projects/vadersb/src/components/side/E:/projects/vadersb/src/styles/_functions.scss","webpack:///./src/components/side/E:/projects/vadersb/src/components/side/E:/projects/vadersb/src/styles/_mixins.scss"],"names":[],"mappings":"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","file":"static/css/app.css?3c485152d9db7a99a47dbe2f4873f800","sourcesContent":["// Helper function for the normalize() mixin.\n@function _normalize-include($section, $exclude: null) {\n  // Initialize the global variables needed by this function.\n  @if not global_variable_exists(_normalize-include) {\n    $_normalize-include: () !global;\n    $_normalize-exclude: () !global;\n  }\n  // Since we are given 2 parameters, set the global variables.\n  @if $exclude != null {\n    $include: $section;\n    // Sass doesn't have static variables, so the work-around is to stuff these\n    // values into global variables so we can access them in future calls.\n    $_normalize-include: if(type-of($include) == 'list', $include, ($include)) !global;\n    $_normalize-exclude: if(type-of($exclude) == 'list', $exclude, ($exclude)) !global;\n    @return true;\n  }\n\n  // Check if $section is in the $include list.\n  @if index($_normalize-include, $section) {\n    @return true;\n  }\n  // If $include is set to (all), make sure $section is not in $exclude.\n  @else if not index($_normalize-exclude, $section) and index($_normalize-include, all) {\n    @return true;\n  }\n  @return false;\n}\n\n@mixin normalize($include: (all), $exclude: ()) {\n  // Initialize the helper function by passing it this mixin's parameters.\n  $init: _normalize-include($include, $exclude);\n\n  // If we've customized any font variables, we'll need extra properties.\n  @if $base-line-height != 24px\n    or $base-unit != 'em'\n    or $h2-font-size != 1.5  * $base-font-size\n    or $h3-font-size != 1.17 * $base-font-size\n    or $h4-font-size != 1    * $base-font-size\n    or $h5-font-size != 0.83 * $base-font-size\n    or $h6-font-size != 0.67 * $base-font-size {\n    $normalize-vertical-rhythm: true !global;\n  }\n\n  /*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */\n\n  @if _normalize-include(document) {\n    /* Document\n       ========================================================================== */\n\n    /**\n     * 1. Correct the line height in all browsers.\n     * 2. Prevent adjustments of font size after orientation changes in\n     *    IE on Windows Phone and in iOS.\n     */\n\n    html {\n      @if $base-font-family {\n        /* Change the default font family in all browsers (opinionated). */\n        font-family: $base-font-family;\n      }\n      @if $base-font-size != 16px or $normalize-vertical-rhythm {\n        // Correct old browser bug that prevented accessible resizing of text\n        // when root font-size is set with px or em.\n        font-size: ($base-font-size / 16px) * 100%;\n      }\n      @if $normalize-vertical-rhythm {\n        line-height: ($base-line-height / $base-font-size) * 1em; /* 1 */\n      }\n      @else {\n        line-height: 1.15; /* 1 */\n      }\n      -ms-text-size-adjust: 100%; /* 2 */\n      -webkit-text-size-adjust: 100%; /* 2 */\n    }\n  }\n\n  @if _normalize-include(sections) {\n    /* Sections\n       ========================================================================== */\n\n    /**\n     * Remove the margin in all browsers (opinionated).\n     */\n\n    body {\n      margin: 0;\n    }\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    article,\n    aside,\n    footer,\n    header,\n    nav,\n    section {\n      display: block;\n    }\n\n    /**\n     * Correct the font size and margin on `h1` elements within `section` and\n     * `article` contexts in Chrome, Firefox, and Safari.\n     */\n\n    h1 {\n      @include normalize-font-size($h1-font-size);\n      @if $normalize-vertical-rhythm {\n        @include normalize-line-height($h1-font-size);\n      }\n\n      @if $normalize-vertical-rhythm {\n        /* Set 1 unit of vertical rhythm on the top and bottom margins. */\n        @include normalize-margin(1 0, $h1-font-size);\n      }\n      @else {\n        margin: 0.67em 0;\n      }\n    }\n\n    @if $normalize-vertical-rhythm {\n      h2 {\n        @include normalize-font-size($h2-font-size);\n        @include normalize-line-height($h2-font-size);\n        @include normalize-margin(1 0, $h2-font-size);\n      }\n\n      h3 {\n        @include normalize-font-size($h3-font-size);\n        @include normalize-line-height($h3-font-size);\n        @include normalize-margin(1 0, $h3-font-size);\n      }\n\n      h4 {\n        @include normalize-font-size($h4-font-size);\n        @include normalize-line-height($h4-font-size);\n        @include normalize-margin(1 0, $h4-font-size);\n      }\n\n      h5 {\n        @include normalize-font-size($h5-font-size);\n        @include normalize-line-height($h5-font-size);\n        @include normalize-margin(1 0, $h5-font-size);\n      }\n\n      h6 {\n        @include normalize-font-size($h6-font-size);\n        @include normalize-line-height($h6-font-size);\n        @include normalize-margin(1 0, $h6-font-size);\n      }\n    }\n  }\n\n  @if _normalize-include(grouping) {\n    /* Grouping content\n       ========================================================================== */\n\n    @if $normalize-vertical-rhythm {\n      /**\n       * Set 1 unit of vertical rhythm on the top and bottom margin.\n       */\n\n      blockquote {\n        @include normalize-margin(1 $indent-amount);\n      }\n\n      dl,\n      ol,\n      ul {\n        @include normalize-margin(1 0);\n      }\n\n      /**\n       * Turn off margins on nested lists.\n       */\n\n      ol,\n      ul {\n        ol,\n        ul {\n          margin: 0;\n        }\n      }\n\n      dd {\n        margin: 0 0 0 $indent-amount;\n      }\n\n      ol,\n      ul {\n        padding: 0 0 0 $indent-amount;\n      }\n    }\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    figcaption,\n    figure {\n      display: block;\n    }\n\n    /**\n     * Add the correct margin in IE 8.\n     */\n\n    figure {\n      @if $normalize-vertical-rhythm {\n        @include normalize-margin(1 $indent-amount);\n      }\n      @else {\n        margin: 1em $indent-amount;\n      }\n    }\n\n    /**\n     * 1. Add the correct box sizing in Firefox.\n     * 2. Show the overflow in Edge and IE.\n     */\n\n    hr {\n      box-sizing: content-box; /* 1 */\n      height: 0; /* 1 */\n      overflow: visible; /* 2 */\n    }\n\n    /**\n     * Add the correct display in IE.\n     */\n\n    main {\n      display: block;\n    }\n\n    @if $normalize-vertical-rhythm {\n      /**\n       * Set 1 unit of vertical rhythm on the top and bottom margin.\n       */\n\n      p,\n      pre {\n        @include normalize-margin(1 0);\n      }\n    }\n\n    /**\n     * 1. Correct the inheritance and scaling of font size in all browsers.\n     * 2. Correct the odd `em` font sizing in all browsers.\n     */\n\n    pre {\n      font-family: monospace, monospace; /* 1 */\n      font-size: 1em; /* 2 */\n    }\n  }\n\n  @if _normalize-include(links) {\n    /* Links\n       ========================================================================== */\n\n    /**\n     * 1. Remove the gray background on active links in IE 10.\n     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n     */\n\n    a {\n      background-color: transparent; /* 1 */\n      -webkit-text-decoration-skip: objects; /* 2 */\n    }\n  }\n\n  @if _normalize-include(text) {\n    /* Text-level semantics\n       ========================================================================== */\n\n    /**\n     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.\n     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n     */\n\n    abbr[title] {\n      border-bottom: none; /* 1 */\n      text-decoration: underline; /* 2 */\n      text-decoration: underline dotted; /* 2 */\n    }\n\n    /**\n     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n     */\n\n    b,\n    strong {\n      font-weight: inherit;\n    }\n\n    /**\n     * Add the correct font weight in Chrome, Edge, and Safari.\n     */\n\n    b,\n    strong {\n      font-weight: bolder;\n    }\n\n    /**\n     * 1. Correct the inheritance and scaling of font size in all browsers.\n     * 2. Correct the odd `em` font sizing in all browsers.\n     */\n\n    code,\n    kbd,\n    samp {\n      font-family: monospace, monospace; /* 1 */\n      font-size: 1em; /* 2 */\n    }\n\n    /**\n     * Add the correct font style in Android 4.3-.\n     */\n\n    dfn {\n      font-style: italic;\n    }\n\n    /**\n     * Add the correct background and color in IE 9-.\n     */\n\n    mark {\n      background-color: #ff0;\n      color: #000;\n    }\n\n    /**\n     * Add the correct font size in all browsers.\n     */\n\n    small {\n      font-size: 80%;\n    }\n\n    /**\n     * Prevent `sub` and `sup` elements from affecting the line height in\n     * all browsers.\n     */\n\n    sub,\n    sup {\n      font-size: 75%;\n      line-height: 0;\n      position: relative;\n      vertical-align: baseline;\n    }\n\n    sub {\n      bottom: -0.25em;\n    }\n\n    sup {\n      top: -0.5em;\n    }\n  }\n\n  @if _normalize-include(embedded) {\n    /* Embedded content\n       ========================================================================== */\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    audio,\n    video {\n      display: inline-block;\n    }\n\n    /**\n     * Add the correct display in iOS 4-7.\n     */\n\n    audio:not([controls]) {\n      display: none;\n      height: 0;\n    }\n\n    /**\n     * Remove the border on images inside links in IE 10-.\n     */\n\n    img {\n      border-style: none;\n    }\n\n    /**\n     * Hide the overflow in IE.\n     */\n\n    svg:not(:root) {\n      overflow: hidden;\n    }\n  }\n\n  @if _normalize-include(forms) {\n    /* Forms\n       ========================================================================== */\n\n    /**\n     * 1. Change the font styles in all browsers (opinionated).\n     * 2. Remove the margin in Firefox and Safari.\n     */\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n      font-family: if($base-font-family, $base-font-family, sans-serif); /* 1 */\n      font-size: 100%; /* 1 */\n      @if $normalize-vertical-rhythm {\n        line-height: ($base-line-height / $base-font-size) * 1em; /* 1 */\n      }\n      @else {\n        line-height: 1.15; /* 1 */\n      }\n      margin: 0; /* 2 */\n    }\n\n    /**\n     * Show the overflow in IE.\n     */\n\n    button {\n      overflow: visible;\n    }\n\n    /**\n     * Remove the inheritance of text transform in Edge, Firefox, and IE.\n     * 1. Remove the inheritance of text transform in Firefox.\n     */\n\n    button,\n    select { /* 1 */\n      text-transform: none;\n    }\n\n    /**\n     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n     *    controls in Android 4.\n     * 2. Correct the inability to style clickable types in iOS and Safari.\n     */\n\n    button,\n    html [type=\"button\"], /* 1 */\n    [type=\"reset\"],\n    [type=\"submit\"] {\n      -webkit-appearance: button; /* 2 */\n    }\n\n    button,\n    [type=\"button\"],\n    [type=\"reset\"],\n    [type=\"submit\"] {\n\n      /**\n       * Remove the inner border and padding in Firefox.\n       */\n\n      &::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n      }\n\n      /**\n       * Restore the focus styles unset by the previous rule.\n       */\n\n      &:-moz-focusring {\n        outline: 1px dotted ButtonText;\n      }\n    }\n\n    /**\n     * Show the overflow in Edge.\n     */\n\n    input {\n      overflow: visible;\n    }\n\n    /**\n     * 1. Add the correct box sizing in IE 10-.\n     * 2. Remove the padding in IE 10-.\n     */\n\n    [type=\"checkbox\"],\n    [type=\"radio\"] {\n      box-sizing: border-box; /* 1 */\n      padding: 0; /* 2 */\n    }\n\n    /**\n     * Correct the cursor style of increment and decrement buttons in Chrome.\n     */\n\n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n      height: auto;\n    }\n\n    /**\n     * 1. Correct the odd appearance in Chrome and Safari.\n     * 2. Correct the outline style in Safari.\n     */\n\n    [type=\"search\"] {\n      -webkit-appearance: textfield; /* 1 */\n      outline-offset: -2px; /* 2 */\n\n      /**\n       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n       */\n\n      &::-webkit-search-cancel-button,\n      &::-webkit-search-decoration {\n        -webkit-appearance: none;\n      }\n    }\n\n    /**\n     * 1. Correct the inability to style clickable types in iOS and Safari.\n     * 2. Change font properties to `inherit` in Safari.\n     */\n\n    ::-webkit-file-upload-button {\n      -webkit-appearance: button; /* 1 */\n      font: inherit; /* 2 */\n    }\n\n    /**\n     * Correct the padding in Firefox.\n     */\n\n    fieldset {\n      padding: 0.35em 0.75em 0.625em;\n    }\n\n    /**\n     * 1. Correct the text wrapping in Edge and IE.\n     * 2. Correct the color inheritance from `fieldset` elements in IE.\n     * 3. Remove the padding so developers are not caught out when they zero out\n     *    `fieldset` elements in all browsers.\n     */\n\n    legend {\n      box-sizing: border-box; /* 1 */\n      display: table; /* 1 */\n      max-width: 100%; /* 1 */\n      padding: 0; /* 3 */\n      color: inherit; /* 2 */\n      white-space: normal; /* 1 */\n    }\n\n    /**\n     * 1. Add the correct display in IE 9-.\n     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n     */\n\n    progress {\n      display: inline-block; /* 1 */\n      vertical-align: baseline; /* 2 */\n    }\n\n    /**\n     * Remove the default vertical scrollbar in IE.\n     */\n\n    textarea {\n      overflow: auto;\n    }\n  }\n\n  @if _normalize-include(interactive) {\n    /* Interactive\n       ========================================================================== */\n\n    /*\n     * Add the correct display in Edge, IE, and Firefox.\n     */\n\n    details {\n      display: block;\n    }\n\n    /*\n     * Add the correct display in all browsers.\n     */\n\n    summary {\n      display: list-item;\n    }\n\n    /*\n     * Add the correct display in IE 9-.\n     */\n\n    menu {\n      display: block;\n\n      @if $normalize-vertical-rhythm {\n        /*\n         * 1. Set 1 unit of vertical rhythm on the top and bottom margin.\n         * 2. Set consistent space for the list style image.\n         */\n\n        @include normalize-margin(1 0); /* 1 */\n        padding: 0 0 0 $indent-amount; /* 2 */\n\n        /**\n         * Turn off margins on nested lists.\n         */\n\n        menu &,\n        ol &,\n        ul & {\n          margin: 0;\n        }\n      }\n    }\n  }\n\n  @if _normalize-include(scripting) {\n    /* Scripting\n       ========================================================================== */\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    canvas {\n      display: inline-block;\n    }\n\n    /**\n     * Add the correct display in IE.\n     */\n\n    template {\n      display: none;\n    }\n  }\n\n  @if _normalize-include(hidden) {\n    /* Hidden\n       ========================================================================== */\n\n    /**\n     * Add the correct display in IE 10-.\n     */\n\n    [hidden] {\n      display: none;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/node_modules/normalize-scss/sass/normalize/_normalize-mixin.scss","//\n// Vertical Rhythm\n//\n// This is the minimal amount of code needed to create vertical rhythm in our\n// CSS. If you are looking for a robust solution, look at the excellent Typey\n// library. @see https://github.com/jptaranto/typey\n\n@function normalize-rhythm($value, $relative-to: $base-font-size, $unit: $base-unit) {\n  @if unit($value) != px {\n    @error \"The normalize vertical-rhythm module only supports px inputs. The typey library is better.\";\n  }\n  @if $unit == rem {\n    @return ($value / $base-font-size) * 1rem;\n  }\n  @else if $unit == em {\n    @return ($value / $relative-to) * 1em;\n  }\n  @else { // $unit == px\n    @return $value;\n  }\n}\n\n@mixin normalize-font-size($value, $relative-to: $base-font-size) {\n  @if unit($value) != 'px' {\n    @error \"normalize-font-size() only supports px inputs. The typey library is better.\";\n  }\n  font-size: normalize-rhythm($value, $relative-to);\n}\n\n@mixin normalize-rhythm($property, $values, $relative-to: $base-font-size) {\n  $value-list: $values;\n  $sep: space;\n  @if type-of($values) == 'list' {\n    $sep: list-separator($values);\n  }\n  @else {\n    $value-list: append((), $values);\n  }\n\n  $normalized-values: ();\n  @each $value in $value-list {\n    @if unitless($value) and $value != 0 {\n      $value: $value * normalize-rhythm($base-line-height, $relative-to);\n    }\n    $normalized-values: append($normalized-values, $value, $sep);\n  }\n  #{$property}: $normalized-values;\n}\n\n@mixin normalize-margin($values, $relative-to: $base-font-size) {\n  @include normalize-rhythm(margin, $values, $relative-to);\n}\n\n@mixin normalize-line-height($font-size, $min-line-padding: 2px) {\n  $lines: ceil($font-size / $base-line-height);\n  // If lines are cramped include some extra leading.\n  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n    $lines: $lines + 1;\n  }\n  @include normalize-rhythm(line-height, $lines, $font-size);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/node_modules/normalize-scss/sass/normalize/_vertical-rhythm.scss","//\n// Variables\n//\n// You can override the default values by setting the variables in your Sass\n// before importing the normalize-scss library.\n\n// The font size set on the root html element.\n$base-font-size: 16px !default;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height: 24px !default;\n\n// The length unit in which to output vertical rhythm values.\n// Supported values: px, em, rem.\n$base-unit: 'em' !default;\n\n// The default font family.\n$base-font-family: null !default;\n\n// The font sizes for h1-h6.\n$h1-font-size: 2    * $base-font-size !default;\n$h2-font-size: 1.5  * $base-font-size !default;\n$h3-font-size: 1.17 * $base-font-size !default;\n$h4-font-size: 1    * $base-font-size !default;\n$h5-font-size: 0.83 * $base-font-size !default;\n$h6-font-size: 0.67 * $base-font-size !default;\n\n// The amount lists and blockquotes are indented.\n$indent-amount: 40px !default;\n\n// The following variable controls whether normalize-scss will output\n// font-sizes, line-heights and block-level top/bottom margins that form a basic\n// vertical rhythm on the page, which differs from the original Normalize.css.\n// However, changing any of the variables above will cause\n// $normalize-vertical-rhythm to be automatically set to true.\n$normalize-vertical-rhythm: false !default;\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/node_modules/normalize-scss/sass/normalize/_variables.scss","/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */\n/* Document\n       ========================================================================== */\n/**\n     * 1. Correct the line height in all browsers.\n     * 2. Prevent adjustments of font size after orientation changes in\n     *    IE on Windows Phone and in iOS.\n     */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n/* Sections\n       ========================================================================== */\n/**\n     * Remove the margin in all browsers (opinionated).\n     */\nbody {\n  margin: 0; }\n\n/**\n     * Add the correct display in IE 9-.\n     */\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block; }\n\n/**\n     * Correct the font size and margin on `h1` elements within `section` and\n     * `article` contexts in Chrome, Firefox, and Safari.\n     */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/* Grouping content\n       ========================================================================== */\n/**\n     * Add the correct display in IE 9-.\n     */\nfigcaption,\nfigure {\n  display: block; }\n\n/**\n     * Add the correct margin in IE 8.\n     */\nfigure {\n  margin: 1em 40px; }\n\n/**\n     * 1. Add the correct box sizing in Firefox.\n     * 2. Show the overflow in Edge and IE.\n     */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/**\n     * Add the correct display in IE.\n     */\nmain {\n  display: block; }\n\n/**\n     * 1. Correct the inheritance and scaling of font size in all browsers.\n     * 2. Correct the odd `em` font sizing in all browsers.\n     */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/* Links\n       ========================================================================== */\n/**\n     * 1. Remove the gray background on active links in IE 10.\n     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n     */\na {\n  background-color: transparent;\n  /* 1 */\n  -webkit-text-decoration-skip: objects;\n  /* 2 */ }\n\n/* Text-level semantics\n       ========================================================================== */\n/**\n     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.\n     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n     */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n     */\nb,\nstrong {\n  font-weight: inherit; }\n\n/**\n     * Add the correct font weight in Chrome, Edge, and Safari.\n     */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n     * 1. Correct the inheritance and scaling of font size in all browsers.\n     * 2. Correct the odd `em` font sizing in all browsers.\n     */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n     * Add the correct font style in Android 4.3-.\n     */\ndfn {\n  font-style: italic; }\n\n/**\n     * Add the correct background and color in IE 9-.\n     */\nmark {\n  background-color: #ff0;\n  color: #000; }\n\n/**\n     * Add the correct font size in all browsers.\n     */\nsmall {\n  font-size: 80%; }\n\n/**\n     * Prevent `sub` and `sup` elements from affecting the line height in\n     * all browsers.\n     */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n       ========================================================================== */\n/**\n     * Add the correct display in IE 9-.\n     */\naudio,\nvideo {\n  display: inline-block; }\n\n/**\n     * Add the correct display in iOS 4-7.\n     */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n     * Remove the border on images inside links in IE 10-.\n     */\nimg {\n  border-style: none; }\n\n/**\n     * Hide the overflow in IE.\n     */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Forms\n       ========================================================================== */\n/**\n     * 1. Change the font styles in all browsers (opinionated).\n     * 2. Remove the margin in Firefox and Safari.\n     */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: sans-serif;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n     * Show the overflow in IE.\n     */\nbutton {\n  overflow: visible; }\n\n/**\n     * Remove the inheritance of text transform in Edge, Firefox, and IE.\n     * 1. Remove the inheritance of text transform in Firefox.\n     */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n     *    controls in Android 4.\n     * 2. Correct the inability to style clickable types in iOS and Safari.\n     */\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */ }\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  /**\n       * Remove the inner border and padding in Firefox.\n       */\n  /**\n       * Restore the focus styles unset by the previous rule.\n       */ }\n  button::-moz-focus-inner,\n  [type=\"button\"]::-moz-focus-inner,\n  [type=\"reset\"]::-moz-focus-inner,\n  [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0; }\n  button:-moz-focusring,\n  [type=\"button\"]:-moz-focusring,\n  [type=\"reset\"]:-moz-focusring,\n  [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText; }\n\n/**\n     * Show the overflow in Edge.\n     */\ninput {\n  overflow: visible; }\n\n/**\n     * 1. Add the correct box sizing in IE 10-.\n     * 2. Remove the padding in IE 10-.\n     */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n     * Correct the cursor style of increment and decrement buttons in Chrome.\n     */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n     * 1. Correct the odd appearance in Chrome and Safari.\n     * 2. Correct the outline style in Safari.\n     */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n  /**\n       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n       */ }\n  [type=\"search\"]::-webkit-search-cancel-button, [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none; }\n\n/**\n     * 1. Correct the inability to style clickable types in iOS and Safari.\n     * 2. Change font properties to `inherit` in Safari.\n     */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n/**\n     * Correct the padding in Firefox.\n     */\nfieldset {\n  padding: 0.35em 0.75em 0.625em; }\n\n/**\n     * 1. Correct the text wrapping in Edge and IE.\n     * 2. Correct the color inheritance from `fieldset` elements in IE.\n     * 3. Remove the padding so developers are not caught out when they zero out\n     *    `fieldset` elements in all browsers.\n     */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  color: inherit;\n  /* 2 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n     * 1. Add the correct display in IE 9-.\n     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n     */\nprogress {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n/**\n     * Remove the default vertical scrollbar in IE.\n     */\ntextarea {\n  overflow: auto; }\n\n/* Interactive\n       ========================================================================== */\n/*\n     * Add the correct display in Edge, IE, and Firefox.\n     */\ndetails {\n  display: block; }\n\n/*\n     * Add the correct display in all browsers.\n     */\nsummary {\n  display: list-item; }\n\n/*\n     * Add the correct display in IE 9-.\n     */\nmenu {\n  display: block; }\n\n/* Scripting\n       ========================================================================== */\n/**\n     * Add the correct display in IE 9-.\n     */\ncanvas {\n  display: inline-block; }\n\n/**\n     * Add the correct display in IE.\n     */\ntemplate {\n  display: none; }\n\n/* Hidden\n       ========================================================================== */\n/**\n     * Add the correct display in IE 10-.\n     */\n[hidden] {\n  display: none; }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\n:focus {\n  outline: none; }\n\n::selection {\n  background: #b3d4fc;\n  text-shadow: none; }\n\nhtml,\nbody {\n  height: 100%; }\n\nhtml {\n  font-size: 14px; }\n  @media (max-width: 1599px) {\n    html {\n      font-size: 11px; } }\n  @media (max-width: 1199px) {\n    html {\n      font-size: 10px; } }\n  @media (max-width: 991px) {\n    html {\n      font-size: 12px; } }\n\nbody {\n  font-size: 1.5rem;\n  font-family: Roboto, Arial, sans-serif;\n  line-height: 1.2;\n  min-width: 320px;\n  color: #000000;\n  background-color: #f5f4f3; }\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle; }\n\nimg {\n  max-width: 100%;\n  height: auto; }\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit; }\n\ntextarea {\n  resize: vertical; }\n\nol,\nul {\n  margin: 0;\n  padding: 0;\n  list-style: none; }\n\ntd,\nth {\n  padding: 0; }\n\na {\n  text-decoration: none;\n  color: #000000; }\n  a:hover {\n    text-decoration: underline; }\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1); }\n\np {\n  margin-top: 0;\n  margin-bottom: 1.875rem; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0;\n  margin-bottom: 8px;\n  font-weight: 500; }\n\nh1 {\n  font-size: 2.25rem;\n  margin-bottom: 2.625rem; }\n\nh2 {\n  font-size: 2rem;\n  margin-bottom: 2.25rem; }\n\nh3 {\n  font-size: 1.75rem;\n  margin-bottom: 1.875rem; }\n\nh4 {\n  font-size: 1.5rem;\n  margin-bottom: 1.5rem; }\n\nh5,\nh6 {\n  font-size: 1.25rem;\n  margin-bottom: 1.25rem; }\n\n.layout {\n  height: 100%;\n  display: flex;\n  flex-direction: column; }\n\n.container {\n  flex: 1 0 auto;\n  display: flex; }\n  @media (max-width: 991px) {\n    .container {\n      display: block; } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/main.scss","*, *:before, *:after {\n  box-sizing: border-box;\n}\n\n:focus {\n  outline: none;\n}\n\n::selection {\n  background: #b3d4fc;\n  text-shadow: none;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nhtml {\n  font-size: 14px;\n  //\n  //@include below(xl) {\n  //  font-size: 14px;\n  //}\n  //\n\n  @include below(xl) {\n    font-size: 11px;\n  }\n  @include below(sm-xl) {\n    font-size: 10px;\n  }\n\n  @include below(lg) {\n    font-size: 12px;\n  }\n}\n\nbody {\n  font-size: $font-size;\n  font-family: $font-family;\n  line-height: $line-height;\n  min-width: $min-width;\n  color: $body-color;\n  background-color: $body-bg;\n}\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nol,\nul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\na {\n  text-decoration: none;\n  color: $link-color;\n  //transition: $transition;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n  margin-top: $spacer;\n  margin-bottom: $spacer;\n  border: 0;\n  border-top: 1px solid rgba(#000000, .1);\n}\n\np {\n  margin-top: 0;\n  margin-bottom: rem(30);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0;\n  margin-bottom: ($spacer / 2);\n  font-weight: 500;\n}\nh1 {\n  font-size: rem(36);\n  margin-bottom: rem(42);\n}\nh2 {\n  font-size: rem(32);\n  margin-bottom: rem(36);\n}\nh3 {\n  font-size: rem(28);\n  margin-bottom: rem(30);\n}\nh4 {\n  font-size: rem(24);\n  margin-bottom: rem(24);\n}\nh5,\nh6 {\n  font-size: rem(20);\n  margin-bottom: rem(20);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_base.scss","// Utilities\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: \"?\",\n    svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n\n  $formats: (\n    otf: \"opentype\",\n    ttf: \"truetype\"\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n@mixin placeholder() {\n  &::-webkit-input-placeholder {\n    @content;\n  }\n  &:-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &::-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin hyphenation() {\n  word-break: break-all;\n  word-wrap: break-word;\n  hyphens: auto;\n}\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n@mixin visually-hidden()  {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  border: 0;\n}\n\n@mixin above($min) {\n  @if type_of($min) == string {\n    $min: map-get($breakpoints, $min);\n  }\n\n  @if $min != 0 {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin below($max) {\n  @if type_of($max) == string {\n    $max: if($max != xs, map-get($breakpoints, $max) - 1, 0);;\n  }\n\n  @if $max != 0 {\n    @media (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n@mixin between($min, $max) {\n  @include above($min) {\n    @include below($max) {\n      @content;\n    }\n  }\n}\n\n@mixin linear(\n  $property,\n  $value-start,\n  $value-end,\n  $width-start: $width-start,\n  $width-end: $width-end,\n  $template: \"#\"\n) {\n  @include below($width-start) {\n    $value: $value-start;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include between($width-start, $width-end) {\n    $value: linear($value-start, $value-end, $width-start, $width-end);\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include above($width-end) {\n    $value: $value-end;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n}\n\n\n// Components\n@mixin button() {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  vertical-align: middle;\n  text-align: center;\n\n  @at-root a#{&}, a#{&}:hover {\n    text-decoration: none;\n  }\n}\n\n@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n\n// Layout\n@mixin clearfix() {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin container($max-width: $max-width) {\n  min-width: $min-width;\n  max-width: $max-width;\n  padding-right: $site-padding;\n  padding-left: $site-padding;\n  margin-left: auto;\n  margin-right: auto;\n};\n\n@mixin fit-to-viewport($side: both) {\n  $offset: calc((100vw - (#{$max-width} - #{$site-padding * 2})) / -2);\n\n  @if $side == left {\n    margin-left: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n    }\n  }\n  @else if ($side == right) {\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-right: $offset;\n    }\n  }\n  @else if ($side == both) {\n    margin-left: $site-padding * -1;\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n      margin-right: $offset;\n    }\n  }\n}\n\n\n// Grid\n@mixin row($gutter: $grid-gutter) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: ($gutter / -2);\n  margin-left:  ($gutter / -2);\n}\n\n@mixin col-ready($gutter: $grid-gutter) {\n  position: relative;\n  min-height: 1px;\n  width: 100%;\n  padding-right: ($gutter / 2);\n  padding-left: ($gutter / 2);\n}\n\n@mixin col($size) {\n  flex: 0 0 percentage($size);\n  max-width: percentage($size);\n}\n\n@mixin col-offset($size) {\n  margin-left: percentage($size);\n}\n\n@mixin col-push($size) {\n  left: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-pull($size) {\n  right: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-modifier($type, $size) {\n  @if $type == push {\n    @include col-push($size);\n  }\n  @else if $type == pull {\n    @include col-pull($size);\n  }\n  @else if $type == offset {\n    @include col-offset($size);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_mixins.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_functions.scss","// Options\n$enable-rem: false;\n\n\n// Colors\n\n// Spacing\n$spacer: px(16);\n$spacers: (\n  0: 0,\n  1: ($spacer * .25),\n  2: ($spacer * .5),\n  3: $spacer,\n  4: ($spacer * 1.5),\n  5: ($spacer * 3)\n);\n\n\n// Body\n$body-bg: #f5f4f3;\n$body-color: #000000;\n\n\n// Links\n$link-color: #000000;\n\n\n// Grid\n$grid-gutter: 30px;\n$grid-columns: 12;\n$breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  sm-xl: 1200px,\n  xl: 1600px,\n  lg-xl: 1900px\n);\n\n\n// Fonts\n$font-family: Roboto, Arial, sans-serif;\n$font-size: rem(24);\n$line-height: 1.2;\n\n\n// Layout\n$site-padding: 15px;\n$min-width: 320px;\n$max-width: 1100px + $site-padding * 2;\n\n\n// Transitions\n$curves: (\n  default:  cubic-bezier(0.4, 0, 0.2, 1), // fast-out-slow-in\n  enter:    cubic-bezier(0, 0, 0.2, 1), // linear-out-slow-in\n  leave:    cubic-bezier(0.4, 0, 1, 1), // fast-out-linear-in\n  stand:    cubic-bezier(0.25, 0.8, 0.25, 1), // fast-in-fast-out\n  drop:     cubic-bezier(0.55, 0, 0.55, 0.2)\n);\n$transition: 0.3s curve(default);\n\n\n// Components\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_variables.scss",".layout {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.container {\n  flex: 1 0 auto;\n  display: flex;\n\n  @include below(lg) {\n    display: block;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/projects/vadersb/src/styles/E:/projects/vadersb/src/styles/_common.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.content {\n  width: percentage(2/3);\n  padding: rem(71) rem(79);\n  flex: 1 0 percentage(1/3);\n\n  @include below(lg) {\n    padding: rem(70);\n    width: percentage(1/1);\n  }\n\n  @include below(md) {\n    padding: rem(50) rem(40);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/content/E:/projects/vadersb/src/components/content/E:/projects/vadersb/src/components/content/content.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/content/E:/projects/vadersb/src/components/content/E:/projects/vadersb/src/styles/_functions.scss","// Utilities\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: \"?\",\n    svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n\n  $formats: (\n    otf: \"opentype\",\n    ttf: \"truetype\"\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n@mixin placeholder() {\n  &::-webkit-input-placeholder {\n    @content;\n  }\n  &:-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &::-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin hyphenation() {\n  word-break: break-all;\n  word-wrap: break-word;\n  hyphens: auto;\n}\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n@mixin visually-hidden()  {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  border: 0;\n}\n\n@mixin above($min) {\n  @if type_of($min) == string {\n    $min: map-get($breakpoints, $min);\n  }\n\n  @if $min != 0 {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin below($max) {\n  @if type_of($max) == string {\n    $max: if($max != xs, map-get($breakpoints, $max) - 1, 0);;\n  }\n\n  @if $max != 0 {\n    @media (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n@mixin between($min, $max) {\n  @include above($min) {\n    @include below($max) {\n      @content;\n    }\n  }\n}\n\n@mixin linear(\n  $property,\n  $value-start,\n  $value-end,\n  $width-start: $width-start,\n  $width-end: $width-end,\n  $template: \"#\"\n) {\n  @include below($width-start) {\n    $value: $value-start;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include between($width-start, $width-end) {\n    $value: linear($value-start, $value-end, $width-start, $width-end);\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include above($width-end) {\n    $value: $value-end;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n}\n\n\n// Components\n@mixin button() {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  vertical-align: middle;\n  text-align: center;\n\n  @at-root a#{&}, a#{&}:hover {\n    text-decoration: none;\n  }\n}\n\n@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n\n// Layout\n@mixin clearfix() {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin container($max-width: $max-width) {\n  min-width: $min-width;\n  max-width: $max-width;\n  padding-right: $site-padding;\n  padding-left: $site-padding;\n  margin-left: auto;\n  margin-right: auto;\n};\n\n@mixin fit-to-viewport($side: both) {\n  $offset: calc((100vw - (#{$max-width} - #{$site-padding * 2})) / -2);\n\n  @if $side == left {\n    margin-left: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n    }\n  }\n  @else if ($side == right) {\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-right: $offset;\n    }\n  }\n  @else if ($side == both) {\n    margin-left: $site-padding * -1;\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n      margin-right: $offset;\n    }\n  }\n}\n\n\n// Grid\n@mixin row($gutter: $grid-gutter) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: ($gutter / -2);\n  margin-left:  ($gutter / -2);\n}\n\n@mixin col-ready($gutter: $grid-gutter) {\n  position: relative;\n  min-height: 1px;\n  width: 100%;\n  padding-right: ($gutter / 2);\n  padding-left: ($gutter / 2);\n}\n\n@mixin col($size) {\n  flex: 0 0 percentage($size);\n  max-width: percentage($size);\n}\n\n@mixin col-offset($size) {\n  margin-left: percentage($size);\n}\n\n@mixin col-push($size) {\n  left: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-pull($size) {\n  right: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-modifier($type, $size) {\n  @if $type == push {\n    @include col-push($size);\n  }\n  @else if $type == pull {\n    @include col-pull($size);\n  }\n  @else if $type == offset {\n    @include col-offset($size);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/content/E:/projects/vadersb/src/components/content/E:/projects/vadersb/src/styles/_mixins.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.icon {\n    display: inline-block;\n    height: 1em;\n    fill: currentColor;\n    fill-rule: evenodd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/icon/E:/projects/vadersb/src/components/icon/E:/projects/vadersb/src/components/icon/icon.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.info {\n  font-size: rem(20);\n  font-weight: 300;\n\n  + .link {\n    margin-top: rem(49);\n  }\n\n  &__item {\n\n    & + & {\n      margin-top: rem(24);\n    }\n  }\n\n  a {\n    font-weight: bold;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/info/E:/projects/vadersb/src/components/info/E:/projects/vadersb/src/components/info/info.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/info/E:/projects/vadersb/src/components/info/E:/projects/vadersb/src/styles/_functions.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.link {\n  color: #39b2ff;\n  display: inline-flex;\n  align-items: center;\n\n  &__icon {\n    flex:  none;\n    width: rem(34);\n    margin-right: rem(9);\n    position: relative;\n    top: rem(-1);\n  }\n\n  &__legend {\n    color: #39b2ff;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/link/E:/projects/vadersb/src/components/link/E:/projects/vadersb/src/components/link/link.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/link/E:/projects/vadersb/src/components/link/E:/projects/vadersb/src/styles/_functions.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.person {\n  margin-bottom: rem(80);\n\n  @include below(lg) {\n    margin-bottom: rem(50);\n  }\n\n  &__img {\n    margin-bottom: rem(48);\n\n    img {\n      width: rem(300);\n      height: rem(300);\n      box-shadow: 0 rem(2) rem(57) rem(7) rgba(0, 0, 0, 0.27);\n      border-radius: 50%;\n    }\n  }\n\n  &__title {\n    font-size: rem(36);\n    margin-bottom: rem(49);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/person/E:/projects/vadersb/src/components/person/E:/projects/vadersb/src/components/person/person.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/person/E:/projects/vadersb/src/components/person/E:/projects/vadersb/src/styles/_functions.scss","// Utilities\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: \"?\",\n    svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n\n  $formats: (\n    otf: \"opentype\",\n    ttf: \"truetype\"\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n@mixin placeholder() {\n  &::-webkit-input-placeholder {\n    @content;\n  }\n  &:-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &::-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin hyphenation() {\n  word-break: break-all;\n  word-wrap: break-word;\n  hyphens: auto;\n}\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n@mixin visually-hidden()  {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  border: 0;\n}\n\n@mixin above($min) {\n  @if type_of($min) == string {\n    $min: map-get($breakpoints, $min);\n  }\n\n  @if $min != 0 {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin below($max) {\n  @if type_of($max) == string {\n    $max: if($max != xs, map-get($breakpoints, $max) - 1, 0);;\n  }\n\n  @if $max != 0 {\n    @media (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n@mixin between($min, $max) {\n  @include above($min) {\n    @include below($max) {\n      @content;\n    }\n  }\n}\n\n@mixin linear(\n  $property,\n  $value-start,\n  $value-end,\n  $width-start: $width-start,\n  $width-end: $width-end,\n  $template: \"#\"\n) {\n  @include below($width-start) {\n    $value: $value-start;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include between($width-start, $width-end) {\n    $value: linear($value-start, $value-end, $width-start, $width-end);\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include above($width-end) {\n    $value: $value-end;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n}\n\n\n// Components\n@mixin button() {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  vertical-align: middle;\n  text-align: center;\n\n  @at-root a#{&}, a#{&}:hover {\n    text-decoration: none;\n  }\n}\n\n@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n\n// Layout\n@mixin clearfix() {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin container($max-width: $max-width) {\n  min-width: $min-width;\n  max-width: $max-width;\n  padding-right: $site-padding;\n  padding-left: $site-padding;\n  margin-left: auto;\n  margin-right: auto;\n};\n\n@mixin fit-to-viewport($side: both) {\n  $offset: calc((100vw - (#{$max-width} - #{$site-padding * 2})) / -2);\n\n  @if $side == left {\n    margin-left: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n    }\n  }\n  @else if ($side == right) {\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-right: $offset;\n    }\n  }\n  @else if ($side == both) {\n    margin-left: $site-padding * -1;\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n      margin-right: $offset;\n    }\n  }\n}\n\n\n// Grid\n@mixin row($gutter: $grid-gutter) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: ($gutter / -2);\n  margin-left:  ($gutter / -2);\n}\n\n@mixin col-ready($gutter: $grid-gutter) {\n  position: relative;\n  min-height: 1px;\n  width: 100%;\n  padding-right: ($gutter / 2);\n  padding-left: ($gutter / 2);\n}\n\n@mixin col($size) {\n  flex: 0 0 percentage($size);\n  max-width: percentage($size);\n}\n\n@mixin col-offset($size) {\n  margin-left: percentage($size);\n}\n\n@mixin col-push($size) {\n  left: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-pull($size) {\n  right: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-modifier($type, $size) {\n  @if $type == push {\n    @include col-push($size);\n  }\n  @else if $type == pull {\n    @include col-pull($size);\n  }\n  @else if $type == offset {\n    @include col-offset($size);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/person/E:/projects/vadersb/src/components/person/E:/projects/vadersb/src/styles/_mixins.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.project {\n\n  &__title {\n    font-size: rem(30);\n    font-weight: 500;\n    margin-bottom: rem(5);\n\n    span {\n      font-weight: 300;\n    }\n  }\n\n  &__links {\n    display: flex;\n    align-items: center;\n    margin-left: rem(2);\n  }\n\n  &__link {\n    font-size: rem(18);\n    color: #0071e4;\n\n    & + & {\n      margin-left: rem(17);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/project/E:/projects/vadersb/src/components/project/E:/projects/vadersb/src/components/project/project.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/project/E:/projects/vadersb/src/components/project/E:/projects/vadersb/src/styles/_functions.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.projects {\n  margin-left: rem(68);\n\n  @include below(lg) {\n    margin-left: 0;\n  }\n\n  &__item {\n\n    & + & {\n      margin-top: rem(22);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/projects/E:/projects/vadersb/src/components/projects/E:/projects/vadersb/src/components/projects/projects.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/projects/E:/projects/vadersb/src/components/projects/E:/projects/vadersb/src/styles/_functions.scss","// Utilities\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: \"?\",\n    svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n\n  $formats: (\n    otf: \"opentype\",\n    ttf: \"truetype\"\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n@mixin placeholder() {\n  &::-webkit-input-placeholder {\n    @content;\n  }\n  &:-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &::-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin hyphenation() {\n  word-break: break-all;\n  word-wrap: break-word;\n  hyphens: auto;\n}\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n@mixin visually-hidden()  {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  border: 0;\n}\n\n@mixin above($min) {\n  @if type_of($min) == string {\n    $min: map-get($breakpoints, $min);\n  }\n\n  @if $min != 0 {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin below($max) {\n  @if type_of($max) == string {\n    $max: if($max != xs, map-get($breakpoints, $max) - 1, 0);;\n  }\n\n  @if $max != 0 {\n    @media (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n@mixin between($min, $max) {\n  @include above($min) {\n    @include below($max) {\n      @content;\n    }\n  }\n}\n\n@mixin linear(\n  $property,\n  $value-start,\n  $value-end,\n  $width-start: $width-start,\n  $width-end: $width-end,\n  $template: \"#\"\n) {\n  @include below($width-start) {\n    $value: $value-start;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include between($width-start, $width-end) {\n    $value: linear($value-start, $value-end, $width-start, $width-end);\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include above($width-end) {\n    $value: $value-end;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n}\n\n\n// Components\n@mixin button() {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  vertical-align: middle;\n  text-align: center;\n\n  @at-root a#{&}, a#{&}:hover {\n    text-decoration: none;\n  }\n}\n\n@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n\n// Layout\n@mixin clearfix() {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin container($max-width: $max-width) {\n  min-width: $min-width;\n  max-width: $max-width;\n  padding-right: $site-padding;\n  padding-left: $site-padding;\n  margin-left: auto;\n  margin-right: auto;\n};\n\n@mixin fit-to-viewport($side: both) {\n  $offset: calc((100vw - (#{$max-width} - #{$site-padding * 2})) / -2);\n\n  @if $side == left {\n    margin-left: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n    }\n  }\n  @else if ($side == right) {\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-right: $offset;\n    }\n  }\n  @else if ($side == both) {\n    margin-left: $site-padding * -1;\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n      margin-right: $offset;\n    }\n  }\n}\n\n\n// Grid\n@mixin row($gutter: $grid-gutter) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: ($gutter / -2);\n  margin-left:  ($gutter / -2);\n}\n\n@mixin col-ready($gutter: $grid-gutter) {\n  position: relative;\n  min-height: 1px;\n  width: 100%;\n  padding-right: ($gutter / 2);\n  padding-left: ($gutter / 2);\n}\n\n@mixin col($size) {\n  flex: 0 0 percentage($size);\n  max-width: percentage($size);\n}\n\n@mixin col-offset($size) {\n  margin-left: percentage($size);\n}\n\n@mixin col-push($size) {\n  left: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-pull($size) {\n  right: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-modifier($type, $size) {\n  @if $type == push {\n    @include col-push($size);\n  }\n  @else if $type == pull {\n    @include col-pull($size);\n  }\n  @else if $type == offset {\n    @include col-offset($size);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/projects/E:/projects/vadersb/src/components/projects/E:/projects/vadersb/src/styles/_mixins.scss","@import \"../../styles/functions\";\n@import \"../../styles/variables\";\n@import \"../../styles/mixins\";\n@import '~sprite.scss';\n\n.side {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: none;\n  width: percentage(1/3);\n  padding: rem(199) rem(30) rem(86);\n  background: #1e1e1e url(\"../../img/side-bg.jpg\") no-repeat center/cover;\n  color: #ffffff;\n  text-align: center;\n\n  @include below(lg-xl) {\n    width: rem(660);\n  }\n\n  @include below(lg) {\n    width: percentage(1/1);\n    padding: rem(60) rem(20);\n  }\n\n  a:not(.link__legend) {\n    color: #ffffff;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/side/E:/projects/vadersb/src/components/side/E:/projects/vadersb/src/components/side/side.scss","@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n\n@function rem($px, $root: 16) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 1rem;\n}\n\n\n@function em($px, $context) {\n  $px: strip-unit($px);\n  $context: strip-unit($context);\n  @return $px / $context * 1em;\n}\n\n\n@function vw($px, $root: $max-width) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vw;\n}\n\n\n@function vh($px, $root: 850) {\n  $px: strip-unit($px);\n  $root: strip-unit($root);\n  @return $px / $root * 100 * 1vh;\n}\n\n\n@function px($px) {\n  $px: strip-unit($px);\n  @return if($enable-rem, rem($px), $px * 1px);\n}\n\n\n@function _px($px) {\n  $px: strip-unit($px);\n  @return $px * 1px;\n}\n\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n@function linear($value-start, $value-end, $width-start: $width-start, $width-end: $width-end) {\n  $tangent: ($value-end - $value-start) / ($width-end - $width-start);\n  @return calc(#{$value-start} + (100vw - #{$width-start}) * #{$tangent});\n}\n\n\n@function z($key, $map: $z-indexes) {\n  @return map-get($map, $key);\n}\n\n\n@function bp($key, $map: $breakpoints) {\n  @return map-get($map, $key);\n}\n\n\n@function spacer($key, $map: $spacers) {\n  @return map-get($map, $key);\n}\n\n\n@function curve($key, $map: $curves) {\n  @return map-get($map, $key);\n}\n\n\n@function color($color, $palette: $colors) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n  // Adjustments\n  @each $function, $value in $adjust {\n    $color: call($function, $color, $value...);\n  }\n  @return $color;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/side/E:/projects/vadersb/src/components/side/E:/projects/vadersb/src/styles/_functions.scss","// Utilities\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: \"?\",\n    svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n\n  $formats: (\n    otf: \"opentype\",\n    ttf: \"truetype\"\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n@mixin placeholder() {\n  &::-webkit-input-placeholder {\n    @content;\n  }\n  &:-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &::-moz-placeholder {\n    opacity: 1;\n    @content;\n  }\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin hyphenation() {\n  word-break: break-all;\n  word-wrap: break-word;\n  hyphens: auto;\n}\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n@mixin visually-hidden()  {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  border: 0;\n}\n\n@mixin above($min) {\n  @if type_of($min) == string {\n    $min: map-get($breakpoints, $min);\n  }\n\n  @if $min != 0 {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin below($max) {\n  @if type_of($max) == string {\n    $max: if($max != xs, map-get($breakpoints, $max) - 1, 0);;\n  }\n\n  @if $max != 0 {\n    @media (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n@mixin between($min, $max) {\n  @include above($min) {\n    @include below($max) {\n      @content;\n    }\n  }\n}\n\n@mixin linear(\n  $property,\n  $value-start,\n  $value-end,\n  $width-start: $width-start,\n  $width-end: $width-end,\n  $template: \"#\"\n) {\n  @include below($width-start) {\n    $value: $value-start;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include between($width-start, $width-end) {\n    $value: linear($value-start, $value-end, $width-start, $width-end);\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n\n  @include above($width-end) {\n    $value: $value-end;\n    #{$property}: unquote(str-replace($template, \"#\", $value));\n  }\n}\n\n\n// Components\n@mixin button() {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  vertical-align: middle;\n  text-align: center;\n\n  @at-root a#{&}, a#{&}:hover {\n    text-decoration: none;\n  }\n}\n\n@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n\n// Layout\n@mixin clearfix() {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin container($max-width: $max-width) {\n  min-width: $min-width;\n  max-width: $max-width;\n  padding-right: $site-padding;\n  padding-left: $site-padding;\n  margin-left: auto;\n  margin-right: auto;\n};\n\n@mixin fit-to-viewport($side: both) {\n  $offset: calc((100vw - (#{$max-width} - #{$site-padding * 2})) / -2);\n\n  @if $side == left {\n    margin-left: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n    }\n  }\n  @else if ($side == right) {\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-right: $offset;\n    }\n  }\n  @else if ($side == both) {\n    margin-left: $site-padding * -1;\n    margin-right: $site-padding * -1;\n\n    @include above($max-width + 1) {\n      margin-left: $offset;\n      margin-right: $offset;\n    }\n  }\n}\n\n\n// Grid\n@mixin row($gutter: $grid-gutter) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: ($gutter / -2);\n  margin-left:  ($gutter / -2);\n}\n\n@mixin col-ready($gutter: $grid-gutter) {\n  position: relative;\n  min-height: 1px;\n  width: 100%;\n  padding-right: ($gutter / 2);\n  padding-left: ($gutter / 2);\n}\n\n@mixin col($size) {\n  flex: 0 0 percentage($size);\n  max-width: percentage($size);\n}\n\n@mixin col-offset($size) {\n  margin-left: percentage($size);\n}\n\n@mixin col-push($size) {\n  left: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-pull($size) {\n  right: if($size > 0, percentage($size), auto);\n}\n\n@mixin col-modifier($type, $size) {\n  @if $type == push {\n    @include col-push($size);\n  }\n  @else if $type == pull {\n    @include col-pull($size);\n  }\n  @else if $type == offset {\n    @include col-offset($size);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/side/E:/projects/vadersb/src/components/side/E:/projects/vadersb/src/styles/_mixins.scss"],"sourceRoot":""}